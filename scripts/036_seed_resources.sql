-- Comprehensive Resource Library Seed Data
-- This script populates the resources table with 20 items of each category

-- First, clear existing sample data (optional - comment out if you want to keep existing)
-- DELETE FROM public.resources WHERE id IS NOT NULL;

-- PROMPTS (20 items)
INSERT INTO public.resources (title, description, category, type, content, tags, difficulty, duration, featured, published) VALUES
('ChatGPT Code Review Prompt', 'Comprehensive prompt for conducting thorough code reviews with AI', 'Prompts', 'template', 'You are an expert code reviewer. Analyze the following code for: 1) Code quality and best practices, 2) Security vulnerabilities, 3) Performance issues, 4) Documentation completeness. Provide specific, actionable feedback.', ARRAY['code-review', 'chatgpt', 'development'], 'intermediate', 5, true, true),
('Technical Documentation Generator', 'AI prompt for creating detailed technical documentation', 'Prompts', 'template', 'Generate comprehensive technical documentation for the following code/API. Include: overview, installation steps, usage examples, API reference, troubleshooting guide, and FAQs.', ARRAY['documentation', 'technical-writing', 'ai'], 'beginner', 3, true, true),
('User Story Creation Prompt', 'Generate well-structured user stories from requirements', 'Prompts', 'template', 'Convert the following requirements into user stories using the format: "As a [user type], I want [goal] so that [benefit]". Include acceptance criteria and edge cases.', ARRAY['agile', 'user-stories', 'product'], 'beginner', 4, false, true),
('API Design Consultant', 'Expert prompt for RESTful API design guidance', 'Prompts', 'template', 'You are an API design expert. Review this API design and provide feedback on: REST principles, endpoint naming, HTTP methods, status codes, authentication, versioning, and documentation.', ARRAY['api', 'rest', 'design'], 'advanced', 8, true, true),
('Database Schema Optimizer', 'Optimize database schemas with AI assistance', 'Prompts', 'template', 'Analyze this database schema and suggest optimizations for: normalization, indexing strategy, query performance, scalability, and data integrity constraints.', ARRAY['database', 'optimization', 'sql'], 'advanced', 10, false, true),
('UI/UX Design Critique', 'Get detailed design feedback from AI', 'Prompts', 'template', 'Provide a comprehensive UX critique of this interface design. Evaluate: visual hierarchy, accessibility, user flow, consistency, mobile responsiveness, and design system adherence.', ARRAY['design', 'ux', 'ui'], 'intermediate', 6, true, true),
('Test Case Generator', 'Generate comprehensive test cases automatically', 'Prompts', 'template', 'Generate test cases for the following feature. Include: unit tests, integration tests, edge cases, error scenarios, and performance tests. Use BDD format.', ARRAY['testing', 'qa', 'automation'], 'intermediate', 7, false, true),
('Security Audit Prompt', 'Comprehensive security vulnerability assessment', 'Prompts', 'template', 'Conduct a security audit of this code. Check for: SQL injection, XSS, CSRF, authentication issues, authorization flaws, data exposure, and OWASP Top 10 vulnerabilities.', ARRAY['security', 'audit', 'vulnerabilities'], 'advanced', 12, true, true),
('Performance Profiling Assistant', 'Identify and fix performance bottlenecks', 'Prompts', 'template', 'Analyze this code for performance issues. Identify: algorithmic complexity, memory leaks, unnecessary computations, database query optimization, and caching opportunities.', ARRAY['performance', 'optimization', 'profiling'], 'advanced', 9, false, true),
('Git Commit Message Generator', 'Create semantic, conventional commit messages', 'Prompts', 'template', 'Generate a conventional commit message for these changes. Follow format: type(scope): description. Types: feat, fix, docs, style, refactor, test, chore.', ARRAY['git', 'version-control', 'best-practices'], 'beginner', 2, false, true),
('Refactoring Advisor', 'Get intelligent code refactoring suggestions', 'Prompts', 'template', 'Suggest refactoring improvements for this code. Focus on: code smells, design patterns, SOLID principles, DRY violations, and maintainability improvements.', ARRAY['refactoring', 'clean-code', 'patterns'], 'intermediate', 8, false, true),
('Error Message Improver', 'Transform technical errors into user-friendly messages', 'Prompts', 'template', 'Rewrite these error messages to be user-friendly. Make them: clear, actionable, empathetic, and include next steps. Avoid technical jargon.', ARRAY['ux-writing', 'errors', 'communication'], 'beginner', 3, false, true),
('Architecture Decision Record', 'Document architectural decisions systematically', 'Prompts', 'template', 'Create an Architecture Decision Record (ADR) for this decision. Include: context, decision, consequences, alternatives considered, and rationale.', ARRAY['architecture', 'documentation', 'adr'], 'intermediate', 10, false, true),
('Code Migration Planner', 'Plan complex code migrations step-by-step', 'Prompts', 'template', 'Create a migration plan from [old tech] to [new tech]. Include: risk assessment, rollback strategy, testing approach, timeline, and success metrics.', ARRAY['migration', 'planning', 'strategy'], 'advanced', 15, false, true),
('Accessibility Audit Prompt', 'Comprehensive WCAG accessibility review', 'Prompts', 'template', 'Audit this interface for accessibility. Check: WCAG 2.1 AA compliance, keyboard navigation, screen reader support, color contrast, ARIA labels, and semantic HTML.', ARRAY['accessibility', 'wcag', 'a11y'], 'intermediate', 8, true, true),
('Onboarding Flow Designer', 'Create effective user onboarding experiences', 'Prompts', 'template', 'Design an onboarding flow for this product. Include: welcome message, key features tour, quick wins, progress indicators, and optional skip functionality.', ARRAY['onboarding', 'ux', 'product'], 'intermediate', 7, false, true),
('Technical Interview Question Generator', 'Generate relevant technical interview questions', 'Prompts', 'template', 'Create technical interview questions for a [role] position. Include: coding challenges, system design, behavioral questions, and evaluation criteria.', ARRAY['interviews', 'hiring', 'technical'], 'intermediate', 6, false, true),
('Changelog Generator', 'Automatically generate user-facing changelogs', 'Prompts', 'template', 'Generate a user-friendly changelog from these git commits. Group by: new features, improvements, bug fixes, breaking changes. Use clear, non-technical language.', ARRAY['changelog', 'release-notes', 'communication'], 'beginner', 4, false, true),
('Microservices Decomposition', 'Break monoliths into microservices strategically', 'Prompts', 'template', 'Analyze this monolith and suggest microservices decomposition. Consider: bounded contexts, data ownership, communication patterns, and migration strategy.', ARRAY['microservices', 'architecture', 'decomposition'], 'advanced', 20, false, true),
('Prompt Engineering Meta-Prompt', 'Create better prompts with AI assistance', 'Prompts', 'template', 'Improve this prompt by making it: more specific, adding context, defining output format, including examples, and setting constraints. Explain your improvements.', ARRAY['prompt-engineering', 'ai', 'meta'], 'advanced', 5, true, true);

-- SKILLS (20 items)
INSERT INTO public.resources (title, description, category, type, content, tags, difficulty, duration, featured, published) VALUES
('React Hooks Mastery', 'Master all React hooks with practical examples', 'Skills', 'tutorial', 'Learn useState, useEffect, useContext, useReducer, useMemo, useCallback, useRef, and custom hooks. Includes real-world examples and best practices.', ARRAY['react', 'hooks', 'javascript'], 'intermediate', 45, true, true),
('TypeScript Advanced Types', 'Deep dive into TypeScript type system', 'Skills', 'tutorial', 'Master generics, conditional types, mapped types, template literal types, and type inference. Build type-safe applications.', ARRAY['typescript', 'types', 'advanced'], 'advanced', 60, true, true),
('Git Workflow Expertise', 'Professional Git workflows and strategies', 'Skills', 'tutorial', 'Learn branching strategies, rebasing, cherry-picking, conflict resolution, and team collaboration workflows.', ARRAY['git', 'version-control', 'workflow'], 'intermediate', 30, false, true),
('SQL Query Optimization', 'Write performant database queries', 'Skills', 'tutorial', 'Master indexes, query plans, joins, subqueries, CTEs, and window functions. Optimize slow queries systematically.', ARRAY['sql', 'database', 'performance'], 'advanced', 50, true, true),
('REST API Design', 'Build well-designed RESTful APIs', 'Skills', 'tutorial', 'Learn resource modeling, HTTP methods, status codes, versioning, pagination, filtering, and API documentation.', ARRAY['api', 'rest', 'backend'], 'intermediate', 40, false, true),
('CSS Grid & Flexbox', 'Modern CSS layout techniques', 'Skills', 'tutorial', 'Master CSS Grid and Flexbox for responsive layouts. Learn when to use each and how to combine them effectively.', ARRAY['css', 'layout', 'frontend'], 'beginner', 35, true, true),
('Docker Containerization', 'Containerize applications with Docker', 'Skills', 'tutorial', 'Learn Dockerfile best practices, multi-stage builds, docker-compose, networking, volumes, and production deployment.', ARRAY['docker', 'devops', 'containers'], 'intermediate', 55, false, true),
('Test-Driven Development', 'Write tests before code with TDD', 'Skills', 'tutorial', 'Master the red-green-refactor cycle. Learn unit testing, mocking, test doubles, and maintaining test suites.', ARRAY['tdd', 'testing', 'methodology'], 'intermediate', 45, true, true),
('GraphQL API Development', 'Build flexible GraphQL APIs', 'Skills', 'tutorial', 'Learn schema design, resolvers, queries, mutations, subscriptions, DataLoader, and N+1 problem solutions.', ARRAY['graphql', 'api', 'backend'], 'advanced', 65, false, true),
('Webpack Configuration', 'Master modern JavaScript bundling', 'Skills', 'tutorial', 'Configure Webpack for development and production. Learn loaders, plugins, code splitting, and optimization.', ARRAY['webpack', 'bundling', 'build-tools'], 'advanced', 50, false, true),
('Accessibility Implementation', 'Build accessible web applications', 'Skills', 'tutorial', 'Implement WCAG 2.1 guidelines. Learn ARIA, keyboard navigation, screen reader support, and testing tools.', ARRAY['accessibility', 'a11y', 'wcag'], 'intermediate', 40, true, true),
('State Management Patterns', 'Manage application state effectively', 'Skills', 'tutorial', 'Compare Redux, MobX, Zustand, Jotai. Learn when to use each and implement complex state logic.', ARRAY['state-management', 'react', 'patterns'], 'advanced', 55, false, true),
('CI/CD Pipeline Setup', 'Automate testing and deployment', 'Skills', 'tutorial', 'Set up GitHub Actions, GitLab CI, or Jenkins. Implement automated testing, building, and deployment workflows.', ARRAY['ci-cd', 'devops', 'automation'], 'intermediate', 60, true, true),
('Performance Monitoring', 'Monitor and optimize application performance', 'Skills', 'tutorial', 'Use Chrome DevTools, Lighthouse, Web Vitals. Implement performance budgets and monitoring solutions.', ARRAY['performance', 'monitoring', 'optimization'], 'advanced', 45, false, true),
('Security Best Practices', 'Secure your web applications', 'Skills', 'tutorial', 'Implement authentication, authorization, CSRF protection, XSS prevention, and secure API communication.', ARRAY['security', 'authentication', 'best-practices'], 'advanced', 70, true, true),
('Responsive Design', 'Create mobile-first responsive layouts', 'Skills', 'tutorial', 'Master media queries, fluid typography, responsive images, and mobile-first design principles.', ARRAY['responsive', 'mobile', 'design'], 'beginner', 30, false, true),
('Code Review Skills', 'Conduct effective code reviews', 'Skills', 'tutorial', 'Learn what to look for, how to give constructive feedback, and establish team code review standards.', ARRAY['code-review', 'collaboration', 'quality'], 'intermediate', 25, false, true),
('Debugging Techniques', 'Debug complex issues systematically', 'Skills', 'tutorial', 'Master browser DevTools, debugging strategies, logging, error tracking, and root cause analysis.', ARRAY['debugging', 'troubleshooting', 'tools'], 'intermediate', 35, false, true),
('API Documentation', 'Write excellent API documentation', 'Skills', 'tutorial', 'Create clear API docs with OpenAPI/Swagger. Include examples, error codes, and interactive documentation.', ARRAY['documentation', 'api', 'technical-writing'], 'beginner', 30, false, true),
('Microservices Architecture', 'Design and implement microservices', 'Skills', 'tutorial', 'Learn service decomposition, communication patterns, data management, and distributed system challenges.', ARRAY['microservices', 'architecture', 'distributed'], 'advanced', 80, true, true);

-- FRAMEWORKS (20 items)
INSERT INTO public.resources (title, description, category, type, content, tags, difficulty, duration, featured, published) VALUES
('Next.js App Router Guide', 'Complete guide to Next.js 14 App Router', 'Frameworks', 'tutorial', 'Master server components, streaming, parallel routes, intercepting routes, and server actions in Next.js 14.', ARRAY['nextjs', 'react', 'app-router'], 'intermediate', 50, true, true),
('Vue 3 Composition API', 'Modern Vue development with Composition API', 'Frameworks', 'tutorial', 'Learn reactive refs, computed properties, watchers, lifecycle hooks, and composables in Vue 3.', ARRAY['vue', 'composition-api', 'javascript'], 'intermediate', 45, false, true),
('Svelte & SvelteKit', 'Build fast apps with Svelte framework', 'Frameworks', 'tutorial', 'Master Svelte reactivity, stores, transitions, and SvelteKit routing, loading, and form actions.', ARRAY['svelte', 'sveltekit', 'framework'], 'beginner', 40, true, true),
('Express.js Backend', 'Build robust Node.js APIs with Express', 'Frameworks', 'tutorial', 'Learn middleware, routing, error handling, authentication, and production best practices.', ARRAY['express', 'nodejs', 'backend'], 'beginner', 35, false, true),
('NestJS Architecture', 'Enterprise Node.js framework with TypeScript', 'Frameworks', 'tutorial', 'Master modules, controllers, providers, dependency injection, and microservices with NestJS.', ARRAY['nestjs', 'typescript', 'enterprise'], 'advanced', 60, true, true),
('Tailwind CSS System', 'Utility-first CSS framework mastery', 'Frameworks', 'tutorial', 'Learn utility classes, customization, plugins, responsive design, and component patterns with Tailwind.', ARRAY['tailwind', 'css', 'styling'], 'beginner', 30, true, true),
('Prisma ORM', 'Type-safe database access with Prisma', 'Frameworks', 'tutorial', 'Master schema definition, migrations, queries, relations, and performance optimization with Prisma.', ARRAY['prisma', 'orm', 'database'], 'intermediate', 45, false, true),
('tRPC End-to-End Type Safety', 'Build type-safe APIs without code generation', 'Frameworks', 'tutorial', 'Learn routers, procedures, middleware, error handling, and React Query integration with tRPC.', ARRAY['trpc', 'typescript', 'api'], 'advanced', 50, true, true),
('Remix Framework', 'Full-stack web framework built on Web Standards', 'Frameworks', 'tutorial', 'Master loaders, actions, nested routing, error boundaries, and progressive enhancement in Remix.', ARRAY['remix', 'react', 'fullstack'], 'intermediate', 55, false, true),
('Astro Static Sites', 'Build fast content sites with Astro', 'Frameworks', 'tutorial', 'Learn islands architecture, partial hydration, content collections, and multi-framework support.', ARRAY['astro', 'static-site', 'performance'], 'beginner', 35, false, true),
('Solid.js Reactivity', 'Fine-grained reactivity without Virtual DOM', 'Frameworks', 'tutorial', 'Master signals, effects, memos, and SolidStart for building performant reactive applications.', ARRAY['solidjs', 'reactivity', 'performance'], 'intermediate', 40, false, true),
('Fastify Performance', 'Fast and low overhead web framework', 'Frameworks', 'tutorial', 'Learn plugins, decorators, hooks, validation, and building high-performance APIs with Fastify.', ARRAY['fastify', 'nodejs', 'performance'], 'intermediate', 40, false, true),
('Nuxt 3 Framework', 'Vue framework for production applications', 'Frameworks', 'tutorial', 'Master auto-imports, server routes, data fetching, and deployment with Nuxt 3.', ARRAY['nuxt', 'vue', 'fullstack'], 'intermediate', 50, false, true),
('Vite Build Tool', 'Next generation frontend tooling', 'Frameworks', 'tutorial', 'Learn instant server start, HMR, optimized builds, and plugin ecosystem with Vite.', ARRAY['vite', 'build-tool', 'development'], 'beginner', 25, true, true),
('Drizzle ORM', 'TypeScript ORM with SQL-like syntax', 'Frameworks', 'tutorial', 'Master schema definition, queries, migrations, and relations with Drizzle ORM.', ARRAY['drizzle', 'orm', 'typescript'], 'intermediate', 40, false, true),
('Hono Edge Framework', 'Ultrafast web framework for edge computing', 'Frameworks', 'tutorial', 'Build APIs for Cloudflare Workers, Deno, and Bun with Hono framework.', ARRAY['hono', 'edge', 'serverless'], 'intermediate', 35, false, true),
('Zod Validation', 'TypeScript-first schema validation', 'Frameworks', 'tutorial', 'Master schema definition, parsing, transformations, and error handling with Zod.', ARRAY['zod', 'validation', 'typescript'], 'beginner', 30, true, true),
('React Query Data Fetching', 'Powerful data synchronization for React', 'Frameworks', 'tutorial', 'Learn queries, mutations, caching, optimistic updates, and infinite queries with React Query.', ARRAY['react-query', 'data-fetching', 'react'], 'intermediate', 45, true, true),
('Playwright Testing', 'Reliable end-to-end testing framework', 'Frameworks', 'tutorial', 'Master browser automation, test generation, debugging, and CI integration with Playwright.', ARRAY['playwright', 'testing', 'e2e'], 'intermediate', 40, false, true),
('Vitest Unit Testing', 'Blazing fast unit test framework', 'Frameworks', 'tutorial', 'Learn test writing, mocking, coverage, and Vite integration with Vitest.', ARRAY['vitest', 'testing', 'unit-tests'], 'beginner', 30, false, true);

-- PERSONAS (20 items)
INSERT INTO public.resources (title, description, category, type, content, tags, difficulty, duration, featured, published) VALUES
('Senior Full-Stack Developer', 'Experienced developer building end-to-end solutions', 'Personas', 'template', 'You are a senior full-stack developer with 8+ years of experience. You excel at: system design, code architecture, mentoring juniors, and making technical decisions. You prioritize: scalability, maintainability, and team productivity.', ARRAY['developer', 'fullstack', 'senior'], 'advanced', 5, true, true),
('Frontend Specialist', 'Expert in modern frontend technologies', 'Personas', 'template', 'You are a frontend specialist focused on: React/Vue/Svelte, performance optimization, accessibility, and user experience. You stay current with: latest frameworks, design systems, and web standards.', ARRAY['frontend', 'specialist', 'ui'], 'intermediate', 5, false, true),
('Backend Engineer', 'Building scalable server-side systems', 'Personas', 'template', 'You are a backend engineer specializing in: API design, database optimization, microservices, and system architecture. You focus on: reliability, performance, and security.', ARRAY['backend', 'engineer', 'api'], 'advanced', 5, false, true),
('DevOps Engineer', 'Infrastructure and deployment automation expert', 'Personas', 'template', 'You are a DevOps engineer managing: CI/CD pipelines, cloud infrastructure, monitoring, and deployment automation. You prioritize: reliability, scalability, and cost optimization.', ARRAY['devops', 'infrastructure', 'automation'], 'advanced', 5, true, true),
('UX Designer', 'Creating intuitive user experiences', 'Personas', 'template', 'You are a UX designer focused on: user research, wireframing, prototyping, and usability testing. You advocate for: user needs, accessibility, and design systems.', ARRAY['ux', 'design', 'user-research'], 'intermediate', 5, false, true),
('Product Manager', 'Driving product strategy and execution', 'Personas', 'template', 'You are a product manager balancing: user needs, business goals, and technical constraints. You excel at: prioritization, stakeholder communication, and data-driven decisions.', ARRAY['product', 'management', 'strategy'], 'intermediate', 5, true, true),
('Security Engineer', 'Protecting systems from vulnerabilities', 'Personas', 'template', 'You are a security engineer specializing in: threat modeling, penetration testing, secure coding, and compliance. You focus on: preventing vulnerabilities and incident response.', ARRAY['security', 'engineer', 'cybersecurity'], 'advanced', 5, false, true),
('Data Engineer', 'Building data pipelines and infrastructure', 'Personas', 'template', 'You are a data engineer working with: ETL pipelines, data warehouses, big data technologies, and data quality. You optimize for: performance, reliability, and scalability.', ARRAY['data', 'engineer', 'pipelines'], 'advanced', 5, false, true),
('Mobile Developer', 'Creating native and cross-platform mobile apps', 'Personas', 'template', 'You are a mobile developer building: iOS/Android apps with React Native or Flutter. You focus on: performance, offline support, and platform-specific features.', ARRAY['mobile', 'developer', 'apps'], 'intermediate', 5, false, true),
('QA Engineer', 'Ensuring software quality through testing', 'Personas', 'template', 'You are a QA engineer specializing in: test automation, manual testing, bug tracking, and quality metrics. You advocate for: comprehensive testing and quality standards.', ARRAY['qa', 'testing', 'quality'], 'intermediate', 5, false, true),
('Technical Writer', 'Creating clear technical documentation', 'Personas', 'template', 'You are a technical writer producing: API docs, user guides, tutorials, and release notes. You excel at: explaining complex concepts clearly and maintaining documentation.', ARRAY['technical-writing', 'documentation', 'communication'], 'beginner', 5, false, true),
('Solutions Architect', 'Designing enterprise-scale systems', 'Personas', 'template', 'You are a solutions architect designing: scalable systems, cloud architectures, and integration strategies. You balance: technical requirements, costs, and business needs.', ARRAY['architect', 'solutions', 'enterprise'], 'advanced', 5, true, true),
('Site Reliability Engineer', 'Maintaining production system reliability', 'Personas', 'template', 'You are an SRE focused on: system reliability, incident response, monitoring, and capacity planning. You implement: SLOs, error budgets, and automation.', ARRAY['sre', 'reliability', 'operations'], 'advanced', 5, false, true),
('AI/ML Engineer', 'Building intelligent systems with machine learning', 'Personas', 'template', 'You are an AI/ML engineer working with: model training, deployment, MLOps, and AI integration. You focus on: model performance, scalability, and ethical AI.', ARRAY['ai', 'ml', 'machine-learning'], 'advanced', 5, true, true),
('Engineering Manager', 'Leading and growing engineering teams', 'Personas', 'template', 'You are an engineering manager responsible for: team performance, hiring, mentoring, and technical strategy. You balance: delivery, team health, and technical excellence.', ARRAY['management', 'leadership', 'team'], 'advanced', 5, false, true),
('Startup CTO', 'Technical leadership in fast-paced startups', 'Personas', 'template', 'You are a startup CTO making: technology decisions, building teams, and balancing speed with quality. You focus on: MVP delivery, scalability, and technical debt management.', ARRAY['cto', 'startup', 'leadership'], 'advanced', 5, false, true),
('Freelance Developer', 'Independent developer managing multiple clients', 'Personas', 'template', 'You are a freelance developer juggling: multiple projects, client communication, and business operations. You excel at: time management, clear communication, and delivering value.', ARRAY['freelance', 'independent', 'consulting'], 'intermediate', 5, false, true),
('Junior Developer', 'Early-career developer learning and growing', 'Personas', 'template', 'You are a junior developer focused on: learning fundamentals, asking good questions, and contributing to the team. You seek: mentorship, code reviews, and growth opportunities.', ARRAY['junior', 'learning', 'career'], 'beginner', 5, false, true),
('Open Source Maintainer', 'Managing popular open source projects', 'Personas', 'template', 'You are an open source maintainer handling: community contributions, issue triage, releases, and documentation. You balance: feature requests, bug fixes, and sustainability.', ARRAY['open-source', 'maintainer', 'community'], 'intermediate', 5, false, true),
('Consultant', 'Advising organizations on technical strategy', 'Personas', 'template', 'You are a technical consultant providing: architecture reviews, technology recommendations, and implementation guidance. You excel at: understanding business context and delivering actionable advice.', ARRAY['consultant', 'advisory', 'strategy'], 'advanced', 5, false, true);

-- TUTORIALS (20 items)
INSERT INTO public.resources (title, description, category, type, url, tags, difficulty, duration, featured, published) VALUES
('Build a Real-Time Chat App', 'Create a full-stack chat application with WebSockets', 'Tutorials', 'video', '/tutorials/realtime-chat', ARRAY['websockets', 'realtime', 'fullstack'], 'intermediate', 90, true, true),
('Implement Authentication Flow', 'Complete auth system with JWT and refresh tokens', 'Tutorials', 'article', '/tutorials/authentication', ARRAY['auth', 'jwt', 'security'], 'intermediate', 60, true, true),
('Deploy to Production', 'Complete deployment guide from dev to production', 'Tutorials', 'tutorial', '/tutorials/deployment', ARRAY['deployment', 'devops', 'production'], 'intermediate', 75, false, true),
('Build a REST API', 'Create a production-ready RESTful API', 'Tutorials', 'video', '/tutorials/rest-api', ARRAY['api', 'rest', 'backend'], 'beginner', 80, true, true),
('Create a Design System', 'Build a reusable component library', 'Tutorials', 'tutorial', '/tutorials/design-system', ARRAY['design-system', 'components', 'ui'], 'advanced', 120, false, true),
('Implement Search Functionality', 'Add full-text search with Elasticsearch', 'Tutorials', 'article', '/tutorials/search', ARRAY['search', 'elasticsearch', 'backend'], 'advanced', 70, false, true),
('Build a Dashboard', 'Create an analytics dashboard with charts', 'Tutorials', 'video', '/tutorials/dashboard', ARRAY['dashboard', 'analytics', 'charts'], 'intermediate', 85, true, true),
('Set Up Monitoring', 'Implement application monitoring and alerting', 'Tutorials', 'tutorial', '/tutorials/monitoring', ARRAY['monitoring', 'observability', 'devops'], 'advanced', 65, false, true),
('Create a Blog Platform', 'Build a full-featured blogging system', 'Tutorials', 'article', '/tutorials/blog-platform', ARRAY['blog', 'cms', 'fullstack'], 'intermediate', 100, false, true),
('Implement Payment Processing', 'Integrate Stripe for payment handling', 'Tutorials', 'video', '/tutorials/payments', ARRAY['payments', 'stripe', 'ecommerce'], 'advanced', 90, true, true),
('Build a Mobile App', 'Create a cross-platform mobile application', 'Tutorials', 'tutorial', '/tutorials/mobile-app', ARRAY['mobile', 'react-native', 'cross-platform'], 'intermediate', 110, false, true),
('Set Up CI/CD Pipeline', 'Automate testing and deployment workflow', 'Tutorials', 'article', '/tutorials/cicd', ARRAY['ci-cd', 'automation', 'devops'], 'intermediate', 70, true, true),
('Implement File Uploads', 'Handle file uploads with cloud storage', 'Tutorials', 'video', '/tutorials/file-uploads', ARRAY['uploads', 'storage', 'backend'], 'beginner', 45, false, true),
('Create an Admin Panel', 'Build a comprehensive admin interface', 'Tutorials', 'tutorial', '/tutorials/admin-panel', ARRAY['admin', 'dashboard', 'crud'], 'intermediate', 95, false, true),
('Implement Caching Strategy', 'Optimize performance with Redis caching', 'Tutorials', 'article', '/tutorials/caching', ARRAY['caching', 'redis', 'performance'], 'advanced', 60, false, true),
('Build a Notification System', 'Create real-time notifications', 'Tutorials', 'video', '/tutorials/notifications', ARRAY['notifications', 'realtime', 'websockets'], 'intermediate', 75, false, true),
('Set Up Database Migrations', 'Manage database schema changes', 'Tutorials', 'tutorial', '/tutorials/migrations', ARRAY['database', 'migrations', 'schema'], 'beginner', 40, false, true),
('Implement Rate Limiting', 'Protect APIs with rate limiting', 'Tutorials', 'article', '/tutorials/rate-limiting', ARRAY['rate-limiting', 'security', 'api'], 'intermediate', 50, false, true),
('Create a Multi-Tenant App', 'Build a SaaS application with multi-tenancy', 'Tutorials', 'video', '/tutorials/multi-tenant', ARRAY['multi-tenant', 'saas', 'architecture'], 'advanced', 130, true, true),
('Implement Internationalization', 'Add multi-language support to your app', 'Tutorials', 'tutorial', '/tutorials/i18n', ARRAY['i18n', 'localization', 'internationalization'], 'intermediate', 55, false, true);

-- TOOLS (20 items)
INSERT INTO public.resources (title, description, category, type, url, tags, difficulty, duration, featured, published) VALUES
('VS Code Extensions Pack', 'Essential VS Code extensions for developers', 'Tools', 'tool', '/tools/vscode-extensions', ARRAY['vscode', 'extensions', 'productivity'], 'beginner', 10, true, true),
('Chrome DevTools Guide', 'Master browser debugging and profiling', 'Tools', 'article', '/tools/chrome-devtools', ARRAY['devtools', 'debugging', 'chrome'], 'intermediate', 40, true, true),
('Git Aliases Collection', 'Productivity-boosting Git shortcuts', 'Tools', 'tool', '/tools/git-aliases', ARRAY['git', 'aliases', 'productivity'], 'beginner', 15, false, true),
('Postman API Testing', 'Complete guide to API testing with Postman', 'Tools', 'tutorial', '/tools/postman', ARRAY['postman', 'api', 'testing'], 'beginner', 35, false, true),
('Docker Compose Templates', 'Ready-to-use Docker Compose configurations', 'Tools', 'tool', '/tools/docker-compose', ARRAY['docker', 'compose', 'devops'], 'intermediate', 25, true, true),
('ESLint Configuration', 'Comprehensive ESLint setup for projects', 'Tools', 'tool', '/tools/eslint-config', ARRAY['eslint', 'linting', 'code-quality'], 'beginner', 20, false, true),
('Prettier Setup Guide', 'Consistent code formatting with Prettier', 'Tools', 'article', '/tools/prettier', ARRAY['prettier', 'formatting', 'code-style'], 'beginner', 15, false, true),
('GitHub Actions Workflows', 'Reusable CI/CD workflow templates', 'Tools', 'tool', '/tools/github-actions', ARRAY['github-actions', 'ci-cd', 'automation'], 'intermediate', 45, true, true),
('Regex Tester & Builder', 'Interactive regex pattern builder', 'Tools', 'tool', '/tools/regex-builder', ARRAY['regex', 'patterns', 'testing'], 'intermediate', 30, false, true),
('API Documentation Generator', 'Auto-generate API docs from code', 'Tools', 'tool', '/tools/api-docs', ARRAY['documentation', 'api', 'automation'], 'beginner', 25, false, true),
('Database Schema Designer', 'Visual database schema design tool', 'Tools', 'tool', '/tools/schema-designer', ARRAY['database', 'schema', 'design'], 'intermediate', 35, false, true),
('Performance Profiler', 'Analyze and optimize application performance', 'Tools', 'tool', '/tools/profiler', ARRAY['performance', 'profiling', 'optimization'], 'advanced', 50, true, true),
('Code Snippet Manager', 'Organize and share code snippets', 'Tools', 'tool', '/tools/snippets', ARRAY['snippets', 'productivity', 'organization'], 'beginner', 20, false, true),
('Terminal Setup Guide', 'Optimize your terminal for productivity', 'Tools', 'article', '/tools/terminal-setup', ARRAY['terminal', 'shell', 'productivity'], 'intermediate', 40, false, true),
('Lighthouse CI Setup', 'Automate performance testing', 'Tools', 'tutorial', '/tools/lighthouse-ci', ARRAY['lighthouse', 'performance', 'ci'], 'intermediate', 35, false, true),
('Storybook Component Library', 'Build and document UI components', 'Tools', 'tool', '/tools/storybook', ARRAY['storybook', 'components', 'documentation'], 'intermediate', 45, true, true),
('Bundle Analyzer', 'Visualize and optimize bundle size', 'Tools', 'tool', '/tools/bundle-analyzer', ARRAY['bundling', 'optimization', 'webpack'], 'intermediate', 30, false, true),
('Error Tracking Setup', 'Implement error monitoring with Sentry', 'Tools', 'tutorial', '/tools/error-tracking', ARRAY['errors', 'monitoring', 'sentry'], 'beginner', 30, false, true),
('Load Testing Tool', 'Stress test your applications', 'Tools', 'tool', '/tools/load-testing', ARRAY['load-testing', 'performance', 'testing'], 'advanced', 40, false, true),
('Code Review Checklist', 'Comprehensive code review guidelines', 'Tools', 'tool', '/tools/code-review', ARRAY['code-review', 'quality', 'checklist'], 'intermediate', 25, true, true);

-- BEST PRACTICES (20 items)
INSERT INTO public.resources (title, description, category, type, content, tags, difficulty, duration, featured, published) VALUES
('Clean Code Principles', 'Write maintainable and readable code', 'Best Practices', 'article', 'Follow SOLID principles, meaningful naming, small functions, and clear abstractions. Avoid code smells and technical debt.', ARRAY['clean-code', 'principles', 'quality'], 'intermediate', 30, true, true),
('API Design Guidelines', 'Best practices for RESTful API design', 'Best Practices', 'article', 'Use proper HTTP methods, status codes, versioning, pagination, filtering, and comprehensive documentation.', ARRAY['api', 'rest', 'design'], 'intermediate', 35, true, true),
('Security Checklist', 'Essential security practices for web apps', 'Best Practices', 'article', 'Implement authentication, authorization, input validation, HTTPS, CSRF protection, and regular security audits.', ARRAY['security', 'checklist', 'web'], 'advanced', 45, true, true),
('Git Commit Guidelines', 'Write meaningful commit messages', 'Best Practices', 'article', 'Use conventional commits, atomic commits, clear descriptions, and proper branching strategies.', ARRAY['git', 'commits', 'version-control'], 'beginner', 20, false, true),
('Code Review Standards', 'Effective code review practices', 'Best Practices', 'article', 'Focus on logic, readability, tests, security, and performance. Give constructive feedback and learn from reviews.', ARRAY['code-review', 'collaboration', 'quality'], 'intermediate', 30, false, true),
('Testing Strategy', 'Comprehensive testing approach', 'Best Practices', 'article', 'Implement unit tests, integration tests, e2e tests, and maintain high coverage. Use TDD when appropriate.', ARRAY['testing', 'strategy', 'quality'], 'intermediate', 40, true, true),
('Database Design Principles', 'Design scalable database schemas', 'Best Practices', 'article', 'Normalize data, use proper indexes, implement constraints, and plan for scalability and performance.', ARRAY['database', 'design', 'schema'], 'advanced', 50, false, true),
('Error Handling Patterns', 'Handle errors gracefully', 'Best Practices', 'article', 'Use try-catch blocks, custom error classes, proper logging, and user-friendly error messages.', ARRAY['errors', 'handling', 'patterns'], 'intermediate', 25, false, true),
('Performance Optimization', 'Optimize application performance', 'Best Practices', 'article', 'Implement caching, lazy loading, code splitting, image optimization, and monitor Core Web Vitals.', ARRAY['performance', 'optimization', 'web-vitals'], 'advanced', 55, true, true),
('Accessibility Guidelines', 'Build accessible web applications', 'Best Practices', 'article', 'Follow WCAG 2.1, use semantic HTML, ARIA labels, keyboard navigation, and test with screen readers.', ARRAY['accessibility', 'wcag', 'a11y'], 'intermediate', 40, true, true),
('Documentation Standards', 'Write effective technical documentation', 'Best Practices', 'article', 'Include README, API docs, code comments, architecture decisions, and keep documentation up-to-date.', ARRAY['documentation', 'standards', 'technical-writing'], 'beginner', 30, false, true),
('Deployment Checklist', 'Safe production deployment practices', 'Best Practices', 'article', 'Use staging environments, automated tests, rollback plans, monitoring, and gradual rollouts.', ARRAY['deployment', 'production', 'devops'], 'intermediate', 35, false, true),
('Code Organization', 'Structure projects for maintainability', 'Best Practices', 'article', 'Use clear folder structure, separation of concerns, modular design, and consistent naming conventions.', ARRAY['organization', 'structure', 'architecture'], 'intermediate', 30, false, true),
('State Management', 'Manage application state effectively', 'Best Practices', 'article', 'Choose appropriate state management, avoid prop drilling, use context wisely, and minimize global state.', ARRAY['state', 'management', 'react'], 'intermediate', 35, false, true),
('API Security', 'Secure your APIs', 'Best Practices', 'article', 'Implement authentication, rate limiting, input validation, CORS, and API key management.', ARRAY['api', 'security', 'authentication'], 'advanced', 45, true, true),
('Responsive Design', 'Build mobile-first responsive layouts', 'Best Practices', 'article', 'Use mobile-first approach, flexible grids, responsive images, and test on real devices.', ARRAY['responsive', 'mobile', 'design'], 'beginner', 30, false, true),
('Logging Best Practices', 'Implement effective logging', 'Best Practices', 'article', 'Use appropriate log levels, structured logging, avoid sensitive data, and implement log rotation.', ARRAY['logging', 'monitoring', 'debugging'], 'intermediate', 25, false, true),
('Dependency Management', 'Manage project dependencies', 'Best Practices', 'article', 'Keep dependencies updated, audit for vulnerabilities, use lock files, and minimize dependencies.', ARRAY['dependencies', 'npm', 'security'], 'beginner', 20, false, true),
('Monitoring Strategy', 'Monitor production applications', 'Best Practices', 'article', 'Implement uptime monitoring, error tracking, performance monitoring, and set up alerts.', ARRAY['monitoring', 'observability', 'production'], 'advanced', 40, false, true),
('Refactoring Guidelines', 'Safely refactor existing code', 'Best Practices', 'article', 'Write tests first, refactor in small steps, use IDE tools, and maintain functionality throughout.', ARRAY['refactoring', 'clean-code', 'maintenance'], 'intermediate', 35, false, true);

-- Add indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_resources_category_type ON public.resources(category, type);
CREATE INDEX IF NOT EXISTS idx_resources_difficulty ON public.resources(difficulty);
CREATE INDEX IF NOT EXISTS idx_resources_featured_published ON public.resources(featured, published) WHERE featured = true AND published = true;
CREATE INDEX IF NOT EXISTS idx_resources_tags ON public.resources USING gin(tags);
CREATE INDEX IF NOT EXISTS idx_resources_created_at ON public.resources(created_at DESC);

-- Update resource counts function
CREATE OR REPLACE FUNCTION get_resource_stats()
RETURNS TABLE(
  total_resources bigint,
  by_category json,
  by_type json,
  by_difficulty json
) AS $$
BEGIN
  RETURN QUERY
  SELECT
    COUNT(*)::bigint as total_resources,
    json_object_agg(category, count) as by_category,
    json_object_agg(type, count) as by_type,
    json_object_agg(difficulty, count) as by_difficulty
  FROM (
    SELECT category, COUNT(*) as count FROM public.resources WHERE published = true GROUP BY category
  ) cat,
  (
    SELECT type, COUNT(*) as count FROM public.resources WHERE published = true GROUP BY type
  ) typ,
  (
    SELECT difficulty, COUNT(*) as count FROM public.resources WHERE published = true GROUP BY difficulty
  ) diff;
END;
$$ LANGUAGE plpgsql;
